// Generated by CoffeeScript 1.8.0
(function() {
  require(["underscore", "jquery", "canvas/Painter", "mousewheel"], function(_, $, Painter) {
    return $(function() {
      var debounce, painter, resize, url, viewport;
      debounce = _.debounce;
      painter = new Painter("image", "draw");
      url = "http://upload.wikimedia.org/wikipedia/commons/9/99/Leonardo_Sala_delle_Asse_detail.jpg";
      painter.showImage(url, 804, 1031);
      painter.setTool({
        tool: "pen",
        color: "red",
        size: 3
      });
      viewport = $('#viewport');
      resize = function() {
        painter.resize(viewport.width(), viewport.height());
        return painter.fit();
      };
      resize();
      $(window).on("contextmenu", function(e) {
        return e.preventDefault();
      }).on("resize", debounce(resize, 200));
      viewport.on("touchstart", function(_arg) {
        var e, touch, _i, _len, _ref, _results;
        e = _arg.originalEvent;
        _ref = e.changedTouches;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          touch = _ref[_i];
          painter.beginPath(touch.identifier);
          _results.push(painter.setPoint(painter.absolutePoint({
            x: touch.pageX,
            y: touch.pageY
          }), touch.identifier));
        }
        return _results;
      });
      viewport.on("touchmove", function(_arg) {
        var e, touch, _i, _len, _ref, _results;
        e = _arg.originalEvent;
        _ref = e.changedTouches;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          touch = _ref[_i];
          _results.push(painter.setPoint(painter.absolutePoint({
            x: touch.pageX,
            y: touch.pageY
          }), touch.identifier));
        }
        return _results;
      });
      return viewport.on("touchend touchcancel", function(_arg) {
        var e, touch, _i, _len, _ref, _results;
        e = _arg.originalEvent;
        _ref = e.changedTouches;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          touch = _ref[_i];
          painter.setPoint(painter.absolutePoint({
            x: touch.pageX,
            y: touch.pageY
          }), touch.identifier);
          _results.push(painter.endPath(touch.identifier));
        }
        return _results;
      });
    });
  });

}).call(this);

//# sourceMappingURL=page.js.map
